{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-mistakes/lib/utils/to-array.ts","ng://ngx-mistakes/lib/ngx-errors/ngx-errors.directive.ts","ng://ngx-mistakes/lib/ngx-errors/ngx-error.directive.ts","ng://ngx-mistakes/lib/ngx-errors.module.ts","ng://ngx-mistakes/lib/ngx-mistakes/ngx-mistakes.directive.ts","ng://ngx-mistakes/lib/ngx-mistakes/ngx-mistake.directive.ts","ng://ngx-mistakes/lib/ngx-mistakes.module.ts"],"names":["__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","toArray","Array","isArray","NgxErrorsDirective","form","this","subject","BehaviorSubject","ready","Object","defineProperty","prototype","control","errors","hasError","name","conditions","checkPropState","isValid","getError","prop","_this","controlPropsState","every","condition","charAt","checkStatus","errorName","ngOnChanges","get","controlName","ngAfterViewInit","setTimeout","statusChanges","subscribe","bind","ngOnDestroy","unsubscribe","Directive","args","selector","exportAs","FormGroupDirective","Input","NgxErrorDirective","ngxErrors","hidden","rules","errorNames","ngOnInit","_states","Subject","states","asObservable","pipe","distinctUntilChanged","filter","obj","indexOf","map","rule","subscription","combineLatest","_a","_b","ngDoCheck","decorators","type","Inject","forwardRef","HostBinding","directives","NgxErrorsModule","NgModule","declarations","exports","NgxMistakesDirective","arr","isNaN","idx","at","NgxMistakeDirective","ngxMistakes","NgxMistakesModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { ErrorOptions } from '../interfaces/errors.interface';\n\nexport const toArray = (value: ErrorOptions): string[] =>\n  Array.isArray(value) ? value : [value];\n","import {\n  Directive,\n  Input,\n  OnChanges,\n  OnDestroy,\n  AfterViewInit\n} from '@angular/core';\nimport { FormGroupDirective, AbstractControl } from '@angular/forms';\n\nimport { BehaviorSubject } from 'rxjs';\n\nimport { ErrorDetails, ErrorOptions } from '../interfaces/errors.interface';\nimport { toArray } from '../utils/to-array';\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[ngxErrors]',\n  exportAs: 'ngxErrors'\n})\nexport class NgxErrorsDirective implements OnChanges, OnDestroy, AfterViewInit {\n  @Input('ngxErrors') controlName: string;\n\n  subject = new BehaviorSubject<ErrorDetails>(null);\n  control: AbstractControl;\n  ready = false;\n\n  constructor(private form: FormGroupDirective) {}\n\n  get errors() {\n    if (!this.ready) {\n      return;\n    }\n    return this.control.errors;\n  }\n\n  get hasErrors() {\n    return !!this.errors;\n  }\n\n  hasError(name: string, conditions: ErrorOptions): boolean {\n    return this.checkPropState('invalid', name, conditions);\n  }\n\n  isValid(name: string, conditions: ErrorOptions): boolean {\n    return this.checkPropState('valid', name, conditions);\n  }\n\n  getError(name: string) {\n    if (!this.ready) {\n      return;\n    }\n    return this.control.getError(name);\n  }\n\n  private checkPropState(\n    prop: string,\n    name: string,\n    conditions: ErrorOptions\n  ): boolean {\n    if (!this.ready) {\n      return;\n    }\n    const controlPropsState =\n      !conditions ||\n      toArray(conditions).every((condition: string) => this.control[condition]);\n    if (name.charAt(0) === '*') {\n      return this.control[prop] && controlPropsState;\n    }\n    return prop === 'valid'\n      ? !this.control.hasError(name)\n      : this.control.hasError(name) && controlPropsState;\n  }\n\n  private checkStatus() {\n    const control = this.control;\n    const errors = control.errors;\n    this.ready = true;\n    if (!errors) {\n      return;\n    }\n    // tslint:disable-next-line:forin\n    for (const errorName in errors) {\n      this.subject.next({ control, errorName });\n    }\n  }\n\n  ngOnChanges() {\n    this.control = this.form.control.get(this.controlName);\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.checkStatus();\n      this.control.statusChanges.subscribe(this.checkStatus.bind(this));\n    });\n  }\n\n  ngOnDestroy() {\n    this.subject.unsubscribe();\n  }\n}\n","import {\n  Directive,\n  Input,\n  OnInit,\n  OnDestroy,\n  DoCheck,\n  Inject,\n  HostBinding,\n  forwardRef\n} from '@angular/core';\n\nimport { Observable, Subscription, Subject, combineLatest } from 'rxjs';\nimport { filter, distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { ErrorOptions } from '../interfaces/errors.interface';\nimport { toArray } from '../utils/to-array';\n\nimport { NgxErrorsDirective } from './ngx-errors.directive';\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[ngxError]'\n})\nexport class NgxErrorDirective implements OnInit, OnDestroy, DoCheck {\n  @Input() set ngxError(value: ErrorOptions) {\n    this.errorNames = toArray(value);\n  }\n\n  @Input() set when(value: ErrorOptions) {\n    this.rules = toArray(value);\n  }\n\n  @HostBinding('hidden') hidden = true;\n\n  rules: string[] = [];\n  errorNames: string[] = [];\n  subscription: Subscription;\n  // tslint:disable-next-line:variable-name\n  _states: Subject<string[]>;\n  states: Observable<string[]>;\n\n  constructor(\n    @Inject(forwardRef(() => NgxErrorsDirective))\n    private ngxErrors: NgxErrorsDirective\n  ) {}\n\n  ngOnInit() {\n    this._states = new Subject<string[]>();\n    this.states = this._states.asObservable().pipe(distinctUntilChanged());\n\n    const errors = this.ngxErrors.subject.pipe(\n      filter(obj => !!obj),\n      // tslint:disable-next-line:no-bitwise\n      filter(obj => !!~this.errorNames.indexOf(obj.errorName))\n    );\n\n    const states = this.states.pipe(\n      // tslint:disable-next-line:no-shadowed-variable no-bitwise\n      map(states => this.rules.every(rule => !!~states.indexOf(rule)))\n    );\n\n    this.subscription = combineLatest([states, errors]).subscribe(\n      // tslint:disable-next-line:no-shadowed-variable\n      ([states, errors]) => {\n        this.hidden = !(states && errors.control.hasError(errors.errorName));\n      }\n    );\n  }\n\n  ngDoCheck() {\n    this._states.next(\n      this.rules.filter(rule => (this.ngxErrors.control as any)[rule])\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { NgxErrorDirective } from './ngx-errors/ngx-error.directive';\nimport { NgxErrorsDirective } from './ngx-errors/ngx-errors.directive';\n\nconst directives = [NgxErrorDirective, NgxErrorsDirective];\n\n@NgModule({\n  declarations: [...directives],\n  exports: [...directives]\n})\nexport class NgxErrorsModule {}\n","import {\n  Directive,\n  Input,\n  OnChanges,\n  OnDestroy,\n  AfterViewInit\n} from '@angular/core';\nimport { FormGroupDirective, AbstractControl, FormArray } from '@angular/forms';\n\nimport { BehaviorSubject } from 'rxjs';\n\nimport { ErrorDetails, ErrorOptions } from '../interfaces/errors.interface';\nimport { toArray } from '../utils/to-array';\n\n@Directive({\n  // tslint:disable-next-line: directive-selector\n  selector: '[ngxErrors]',\n  exportAs: 'ngxErrors'\n})\nexport class NgxMistakesDirective\n  implements OnChanges, OnDestroy, AfterViewInit {\n  @Input('ngxErrors') controlName: string;\n  @Input() arr: string;\n  @Input() idx: number;\n\n  subject = new BehaviorSubject<ErrorDetails>(null);\n  control: AbstractControl;\n  ready = false;\n\n  constructor(private form: FormGroupDirective) {}\n\n  get errors() {\n    if (!this.ready) {\n      return;\n    }\n    return this.control.errors;\n  }\n\n  get hasErrors() {\n    return !!this.errors;\n  }\n\n  hasError(name: string, conditions: ErrorOptions): boolean {\n    return this.checkPropState('invalid', name, conditions);\n  }\n\n  isValid(name: string, conditions: ErrorOptions): boolean {\n    return this.checkPropState('valid', name, conditions);\n  }\n\n  getError(name: string) {\n    if (!this.ready) {\n      return;\n    }\n    return this.control.getError(name);\n  }\n\n  private checkPropState(\n    prop: string,\n    name: string,\n    conditions: ErrorOptions\n  ): boolean {\n    if (!this.ready) {\n      return;\n    }\n    const controlPropsState =\n      !conditions ||\n      toArray(conditions).every((condition: string) => this.control[condition]);\n    if (name.charAt(0) === '*') {\n      return this.control[prop] && controlPropsState;\n    }\n    return prop === 'valid'\n      ? !this.control.hasError(name)\n      : this.control.hasError(name) && controlPropsState;\n  }\n\n  private checkStatus() {\n    const control = this.control;\n    const errors = control.errors;\n    this.ready = true;\n    if (!errors) {\n      return;\n    }\n    // tslint:disable-next-line:forin\n    for (const errorName in errors) {\n      this.subject.next({ control, errorName });\n    }\n  }\n\n  ngOnChanges() {\n    if (this.arr && !isNaN(this.idx)) {\n      const arr = this.form.control.get(this.arr) as FormArray;\n      if (arr) {\n        const control = arr.at(this.idx);\n        if (control) {\n          this.control = control.get(this.controlName);\n        }\n      }\n    } else {\n      this.control = this.form.control.get(this.controlName);\n    }\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.checkStatus();\n      this.control.statusChanges.subscribe(this.checkStatus.bind(this));\n    });\n  }\n\n  ngOnDestroy() {\n    this.subject.unsubscribe();\n  }\n}\n","import {\n  Directive,\n  Input,\n  OnInit,\n  OnDestroy,\n  DoCheck,\n  Inject,\n  HostBinding,\n  forwardRef\n} from '@angular/core';\n\nimport { Observable, Subscription, Subject, combineLatest } from 'rxjs';\nimport { filter, distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { ErrorOptions } from '../interfaces/errors.interface';\nimport { toArray } from '../utils/to-array';\n\nimport { NgxMistakesDirective } from './ngx-mistakes.directive';\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[ngxError]'\n})\nexport class NgxMistakeDirective implements OnInit, OnDestroy, DoCheck {\n  @Input() set ngxError(value: ErrorOptions) {\n    this.errorNames = toArray(value);\n  }\n\n  @Input() set when(value: ErrorOptions) {\n    this.rules = toArray(value);\n  }\n\n  @HostBinding('hidden') hidden = true;\n\n  rules: string[] = [];\n  errorNames: string[] = [];\n  subscription: Subscription;\n  // tslint:disable-next-line:variable-name\n  _states: Subject<string[]>;\n  states: Observable<string[]>;\n\n  constructor(\n    @Inject(forwardRef(() => NgxMistakesDirective))\n    private ngxMistakes: NgxMistakesDirective\n  ) {}\n\n  ngOnInit() {\n    this._states = new Subject<string[]>();\n    this.states = this._states.asObservable().pipe(distinctUntilChanged());\n\n    const errors = this.ngxMistakes.subject.pipe(\n      filter(obj => !!obj),\n      // tslint:disable-next-line:no-bitwise\n      filter(obj => !!~this.errorNames.indexOf(obj.errorName))\n    );\n\n    const states = this.states.pipe(\n      // tslint:disable-next-line:no-shadowed-variable no-bitwise\n      map(states => this.rules.every(rule => !!~states.indexOf(rule)))\n    );\n\n    this.subscription = combineLatest([states, errors]).subscribe(\n      // tslint:disable-next-line:no-shadowed-variable\n      ([states, errors]) => {\n        this.hidden = !(states && errors.control.hasError(errors.errorName));\n      }\n    );\n  }\n\n  ngDoCheck() {\n    this._states.next(\n      this.rules.filter(rule => (this.ngxMistakes.control as any)[rule])\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { NgxMistakeDirective } from './ngx-mistakes/ngx-mistake.directive';\nimport { NgxMistakesDirective } from './ngx-mistakes/ngx-mistakes.directive';\n\nconst directives = [NgxMistakeDirective, NgxMistakesDirective];\n\n@NgModule({\n  declarations: [...directives],\n  exports: [...directives]\n})\nexport class NgxMistakesModule {}\n"]}